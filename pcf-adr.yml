asyncapi: 3.0.0
id: urn:pcf-adr
info:
  title: PCF ADR
  version: 1.4.0
defaultContentType: application/json

servers:
  external-1:
    host: 'localhost:19092'
    protocol: kafka

operations:
  publishADR:
    action: send
    channel:
      $ref: '#/channels/pcfADR'

channels:
  pcfADR:
    address: pcfADR
    messages:
      ADR:
        title: Activity Data Record
        summary: An information record about an activity performed in the system for a user equipment (UE) - a device used directly by an end-user to communicate.
        description: >
          <details>
          <summary><u>ADR and LDR context:</u></summary>
          <b>LDR (Local Data Record)</b> are local records created by each activity that occurs in the system with all the information arising from that activity. They contain a large amount of information in order to include resubmissions for correction and cancellation of actions, but also for diagnostic purposes.
          <br>
          Each system participates in diverse business processes with multiple activities (process = Î£ activities). Since each activity generates a LDR, different LDRs created by different systems are enforced to be correlative to group LDRs from the same business process.
          <p>
          <b>ADR (Activity Data Record)</b> are similar to LDRs. They are generated from LDRs and published externally, for third-party systems. While LDR are hardcoded in the own system (non-parameterizable), the structure of ADRs is decided by parameterization, via OMS (Operational & Maintenance System), with versioning. 
          <br>
          Depending on the ADR type/scenario, some fields may be absent or optional. There are multiple types of ADRs, commonly grouped as follows: 
          <ul>
          <li> <b>service activity</b> ADRs, which includes <code>SMPolicyControl</code>, <code>PolicyAuthorization</code>, and <code>Charging</code>;
          <li> <b>provision</b> ADRs, which includes <code>AccountManagement</code> (for <i>Account</i> provisions), and <code>ProductManagement</code> (for <i>Product</i> and <i>TopLevel</i> provisions); and
          <li> <b>top-up</b> ADRs.
          </ul>
          In terms of scenarios, there are two:
          <ul>
          <li> <b>single event</b> scenarios, where there is no session (e.g., <b>provision</b> ADRs, <b>top-up</b> ADRs); and
          <li> <b>session</b> scenarios (e.g., <b>service activity</b> ADRs).
          </ul>
          </details>
        externalDocs:
          description: Wiki - PCF ADR Specification
          url: https://wiki.ptin.corppt.com/display/PCFKERNEL/PCF+ADR+Specification+1.2
        headers:
          type: object
          properties:
            producerId:
              description: Producer Id
              type: string
            recordTypeId:
              description: Recorder Type Id
              type: string
            timestamp:
              description: Date
              type: string
              format: date-time
            validity:
              description: Validity
              type: integer
              format: int32
              minimum: 0
        payload:
          type: object
          description: The ADR definition.
          required:
          - id
          - systemId
          - version
          - ldrId
          - creationTs
          - activityType
          - activitySubType
          - activityStartTs
          dependencies:
            activitySubType:
              oneOf:
              - title: AccountManagement ADR
                properties:
                  activityType:
                    const: "AccountManagement"
                  activitySubType:
                    enum: ['CreateAccount', 'UpdateAccount']
              - title: ProductManagement ADR
                properties:
                  activityType:
                    const: "ProductManagement"
                  activitySubType:
                    enum: ['CreateProduct', 'UpdateProduct']
              - title: SMPolicyControl ADR
                properties:
                  activityType:
                    const: "SMPolicyControl"
                  activitySubType:
                    enum: ['SMPolicyControl']
              - title: PolicyAuthorization ADR
                properties:
                  activityType:
                    const: "PolicyAuthorization"
                  activitySubType:
                    enum: ['PolicyAuthorization']
              - title: SpendingLimit ADR
                properties:
                  activityType:
                    const: "SpendingLimit"
                  activitySubType:
                    enum: ['SpendingLimit']
            notifications:
              required: ['version']
              properties:
                version:
                  type: string
                  const: 1.2
          properties:
            id:
              type: string
              description: >
                Unique identifier of the ADR.
                <p>
                _Note:_ it is coincident to the source LDR identifier.
            systemId:
              type: string
              description: System identifier. Useful on deployments, where there are multiple systems.
              examples: 
              - MEOPCF
            version:
              type: string
              pattern: /^\d+\.\d+$/
              description: >
                ADR global specification version, in the format: `<Major>.<minor>`.\
                
                When there are changes that do not break backward compatibility, the **minor** version will be increased, otherwise, the **Major**  version will be increased.
            creationTs:
              type: string
              description: >
                LDR creation instant.
                <p>
                _Note:_ <u>Not</u> the publish instant, <u>nor</u> the LDR to ADR transformation instant.
              format: UTCZ
            correlationId:
              type: string
              description: >
                Identifier to associate this ADR with other records of other activities. Two ADRs from the same business process, but produced asynchronously in different activities/systems, can be associated.
                <p>
                _Example:_ when the ASM receives a request for a provision activity, it has to create an LDR with a `correlationId` and propagate that to the CCS and PCF systems. These systems will then create their own LDRs with the same `correlationId`.
            productId:
              type: string
              description: >
                Identifier of the product that was subscribed (also known as agreement in 4th Gen.).

                This subscription may have been made to a complementary product.
            productOfferingId:
              type: string
              description: Identifier of the commercial offer template that originated the product subscribed.
            productAccountId:
              type: string
              description: Account that contains the product of the activity.
            productAccountTimeZone:
              type: string
              pattern: /^[+-]\d{2}:\d{2}$/
              description: Timezone associated to the product's account.
              examples: 
              - +00:00
            billingAccountId:
              type: string
              description: >
                The billing account identifier related to the activity. Specific for billing purposes only where an hierarchical structure of accounts is needed.
                <p>
                _Example:_ when a set of accounts are connected to a reseller account (meaning that every account, including the reseller account, has the `billingAccountId` equal to the reseller account identifier) the billing is unified on a single invoice belonging to the reseller account.
            protocolSessionId:
              type: string
              description: Protocol network session identifier.
            technicalCommunicationId:
              type: string
              description: Technical identifier of the UE (e.g., MSISDN, IMSI, etc.) that used the service. <u>Only required</u> in **service activity** records.\

                This allows the service request to be associated with the _TopLevel_ set responsible for processing it. If `communicationProducts` is present, this should match one of the `communicationProducts[].id` values.
                <p>
                _Note:_ The way to obtain the value of this attribute must be deterministic and explicitly configured in the TC (at the _Service Criteria_ level).
              examples: 
              - "960000001"
            communicationProducts:
              description: List of public identifiers of the communication devices (UEs) with the product subscription. <u>Required</u> in **provision** records, but <u>optional</u> in **service activity** records.
              type: array
              items:
                $ref: '#/components/schemas/CommunicationProduct'
            activityId:
              type: string
              description: >
                Activity identifier, generally. This field is used to associate segments of the same activity.

                - In **session** scenarios, it is the session identifier.

                - In **single event** scenarios, it is the event identifier.        
            activityType:
              type: string
              description: Describes the activity performed.
              enum:
                - AccountManagement
                - ProductManagement
                - SMPolicyControl
                - PolicyAuthorization
                - SpendingLimit
            activitySubType:
              type: string
              description: Describes the nature of the activity type. The value depends on the `activityType` value. 
            activityStartTs:
              type: string
              format: UTCZ
              description: >
                Activity start time instant (entire session).

                - In **session** scenarios, it is the beginning of the session. Intermediate records in a session (due to limit of consumption, time, or events) fill this field with the TS at the beginning of the session.

                - In **single event** scenarios, it is the instant associated with the event.
            activityEndTs:
              type: string
              format: UTCZ
              description: >
                Activity end time instant. This field is only filled in the last segment of this activity.

                - In **session** scenarios, it is the end of the session. Intermediate records in a session (due to limit of consumption, time, or events) <u>do not</u> fill in this field.

                - In **single event** scenarios, it is the instant associated with the event (i.e. equal to `activityStartTs`).
            activityTimeZone:
              type: string
              pattern: /^[+-]\d{2}:\d{2}$/
              description: Timezone associated to the activity.
              examples: 
              - +00:00
            activityBusinessResult:
              type: object
              description: Business result of the reported activity.
              required:
              - code
              properties:
                code:
                  type: string
                  description: Activity result code.
                  examples: 
                  - OK
                classification:
                  type: string
                  description: Activity result category.
                  enum:
                  - SUCCESS
                  - CLIENT_ERROR
            segmentNumber:
              type: integer
              minimum: 1
              description: >
                Index for the part (segment) of the activity to which the record refers.

                - In **session** scenarios, several intermediate records can be generated (limit of consumption, time, or events).
            segmentStartTs:
              type: string
              format: UTCZ
              description: >
                Instant of the activity associated with the beginning of the segment.

                - In **session** scenarios, it is the instant associated with the beginning of the segment (at the beginning of the session, it is equal to `activityStartTs`).

                - In **single event** scenarios, it is the instant associated with the event.
            segmentEndTs:
              type: string
              format: UTCZ
              description: >
                Instant of the activity associated with the end of the segment.

                - In **session** scenarios, it is the instant associated with the end of the segment (at the end of the session, the end of the segment is equal to `activityEndTs`).

                - In **single event** scenarios, it is the instant associated with the event.
            events:
              type: array
              description: List of events
              items:
                $ref: '#/components/schemas/Event'
            provisioning:
              $ref: '#/components/schemas/Provisioning'
            policy:
              $ref: '#/components/schemas/SMPolicyControl'
            notifications:
              type: array
              items:
                $ref: '#/components/schemas/Notification'
        examples:
        - payload: 
            id: 2143ae4a-8f91-11ee-b9d1-0242ac120002
            systemId: MEOPCF
            version: 1.1
            creationTs: 2023-11-21T17:32:28.000Z
            correlationId: corr-40710e14-8f16-11ee-b9d1-0242ac120002
            productId: product-7463524
            productOfferingId: 188c66ee-8f18-11ee-b9d1-0242ac120002
            productAccountId: ACC-12345
            productAccountTimeZone: +00:00
            billingAccountId: bill-acc-983625
            protocolSessionId: Session-706ba8fc-f82d-48e7-84dd-af34127250c6
            technicalCommunicationId: "960000001"
            communicationProducts:
              id: "960000001"
              type: MOBILE
            activityId: Req-bce51c6a-8f16-11ee-b9d1-0242ac120002
            activityType: ProductManagement
            activitySubType: CreateProduct
            activityStartTs: 2023-11-21T17:32:28.000Z
            activityEndTs: 2023-11-21T17:32:28.000Z
            activityTimeZone: +00:00
            activityBusinessResult:
              code: OK
              classification: SUCCESS
            segmentNumber: 1
            segmentStartTs: 2023-11-21T17:32:28.000Z
            segmentEndTs: 2023-11-21T17:32:28.000Z
            events:
              id: 99ce7f3f-5ae9-458a-a02a-acafb2e2677c
              activityTs: 2023-11-30T01:01:03.746Z
              arrivalTs: 2023-11-30T01:01:07.746Z
              eventType: Unique
              eventPayload: 
                id: 1
                activityTs: 2023-11-30T01:01:03.746Z
                eventType: Unique
                data:
                  value1: 1
                  value2: 2
            provisioning:
              channel: Shop
              subChannel: Web
              reason:
                code: CLIENT
                description: Customer request
              items:
              - operation: CREATE
                type: Account
                entity:
                  id: 8a1baff3-d8a4-4330-95c6-744b7e6b9493
                  accountId: acc-12345
                  productOffering: f1200364-8f20-11ee-b9d1-0242ac120002
                  productCharacteristics:
                  - name: offer
                    value: Postpaid
                  - name: User
                    value: John
                  communicationProducts:
                    id: "960000001"
                    type: mobile
              policy:
                sessionPart:
                  sessionPolicies:
                  - id: tl-123465
                    specId: 12e1a82c-4feb-4a57-aa78-3b700e0d5623
                    eligibilityPlans:
                    - specId: 81455de9-46f8-4991-8f09-ff55eaa97039
                      resultSpecId: 47761961-08ec-40b3-807f-5777a5d92c33
                    sessionPlans:
                    - specId: 81455de9-46f8-4991-8f09-ff55eaa97039
                      resultSpecIds:
                      - 47761961-08ec-40b3-807f-5777a5d92c33
                    notificationPlans: 
                    - specId: 81455de9-46f8-4991-8f09-ff55eaa97039
                      resultSpecIds:
                      - 47761961-08ec-40b3-807f-5777a5d92c33
                  servicePolicies:
                  - id: tl-123465
                    specId: 12e1a82c-4feb-4a57-aa78-3b700e0d5623
                    servicePlans:
                    - specId: 81455de9-46f8-4991-8f09-ff55eaa97039
                      resultSpecIds:
                      - 47761961-08ec-40b3-807f-5777a5d92c33
                    notificationPlans:
                    - specId: 81455de9-46f8-4991-8f09-ff55eaa97039
                      resultSpecIds:
                      - 47761961-08ec-40b3-807f-5777a5d92c33
                  appliedEligibility:
                    result: true
                    reason: AUTHORIZED
                  appliedPCCRules:
                  - specId: 04bb4505-e880-496e-8aeb-260ff5728575
                  appliedSessionRules:
                  - specId: 04bb4505-e880-496e-8aeb-260ff5728575
                  policyCounters:
                  - id: counter-12345
                    value: 100

components: 
  schemas:
    CommunicationProduct:
      type: object
      description: Public communication device (UE) with the product subscription.
      properties:
        id:
          type: string
          description: Public identifier of the UE (e.g., MSISDN, IMSI, etc.) with the product subscription.
          examples: 
          - "960000001"
        type:
          type: string
          description: UE type with the product subscrition.
          examples: 
          - MOBILE
          - FIXED
      externalDocs:
        description: GitHub - CommunicationProduct v1.15
        url: https://github.com/AlticeLabsProjects/ccp-common-models/blob/v1.15/src/main/java/com/alticelabs/ccp/common_models/types/CommunicationProduct.java

    Event:
      type: object
      required:
      - activityTs
      - arrivalTs
      - eventType
      - eventPayload
      properties:
        id:
          type: string
          description: Network event identifier.
        activityTs:
          type: string
          format: UTCZ
          description: Network event activity instant. This corresponds to the instant when the request arrived.
        arrivalTs:
          type: string
          format: UTCZ
          description: Network event arrival/process instant. This corresponds to the instant when the request was handled (`activityTs <= arrivalTs`).
        eventType:
          type: string
          description: Nature of the network event.
          enum: 
            - Unique
            - Initial
            - Final
            - Intermediate
        eventPayload:
          type: object
          additionalProperties: true
          description: >
            Internal representation of the network event that arrived at the system converted by the Protocol Mapper.
         
    
    Provisioning:
      type: object
      description: Provisioning information.
      required:
      - channel
      - subChannel
      - reason
      properties:
        channel:
          type: string
          description: >
            Channel system classification passed by parameter in the provision operation.
            <p>
            _Note:_ The value <u>is not</u> enforced. The choice of how to use this is left to each system.
          examples: 
          - Shop
        subChannel:
          type: string
          description: >
            Subchannel system classification passed by parameter in the provision operation.
            <p>
            _Note:_ The value <u>is not</u> enforced. The choice of how to use this is left to each system.
          examples: 
          - Web
        reason:
          type: object
          description: >
            Provisioning reason.
            <p>
            _Note:_ The value <u>is not</u> enforced. The choice of how to use this is left to each system.
          required:
          - code
          properties:
            code:
              type: string
              description: Operation reason code.
              examples: 
              - CLIENT
            description:
              type: string
              description: >
                Reason description (e.g., balance adjustment due to customer complaint, account).
              examples:
              - Customer request
        items:
          type: array
          description: List of provisioned entities (e.g., _Account_, _Product_, _TopLevel_).
          items:
            description: provisioning item
            type: object
            required:
            - operation
            - type
            properties:
              operation:
                type: string
                description: Provisioned operation.
                examples: 
                - CREATE
                - UPDATE
              type:
                type: string
                description: Provisioned entity type.
                examples:
                - Account
                - Product
                - ServicePolicy
              entity:
                type: object
                description: Representation of the entity result after its changes.
                examples:
                - id: 8a1baff3-d8a4-4330-95c6-744b7e6b9493
                  accountId: acc-12345
                  productOffering: f1200364-8f20-11ee-b9d1-0242ac120002
                  productCharacteristics:
                    - name: offer
                      value: Postpaid
                    - name: User
                      value: John
                  communicationProducts:
                    - id: "960000001"
                      type: mobile
    
    SMPolicyControl:
      type: object
      description: Service information associated with policy session N7 and N28.
      required:
        - sessionPart
      properties:
        sessionPart:
          type: array
          description: List of session segments.
          items:
             $ref: '#/components/schemas/SessionPart'
    
    SessionPart:
      type: object
      description: Session policy segment.
      properties:
        sessionPolicies:
          type: array
          items:
            $ref: '#/components/schemas/SessionPolicy'
        servicePolicies:
          type: array
          items:
            $ref: '#/components/schemas/ServicePolicy'
        appliedEligibility:
          $ref: '#/components/schemas/AppliedEligibility'
        appliedPCCRules:
          type: array
          description: Detailed information on the PCC rules applied during the sessions (e.g., periods of time when the session were on 4G or 5G).
          items:
            $ref: '#/components/schemas/AppliedPCCRule'
        appliedSessionRules:
          description: Detailed information on the session rules applied during the sessions (e.g., periods of time when the session were on 4G or 5G).
          type: array
          items:
            $ref: '#/components/schemas/AppliedSessionRule'
        policyCounters:
          type: array
          description: List of Policy Counters used.
          items:           
            $ref: '#/components/schemas/PolicyCounter'
    
    SessionPolicy:
      type: object
      description: Session policy activity.
      properties:
        id:
          type: string
          description: Top Level unique identifier.
        specId:
          type: string
          description: Top Level specification identifier.
        eligibilityPlans:
          type: array
          description: List of executed Eligibility Plans.
          items:
            $ref: '#/components/schemas/EligibilityPlan'
        sessionPlans:
          type: array
          description: List of executed Session Plans.
          items:
            $ref: '#/components/schemas/SessionPlan'
        notificationPlans:
          type: array
          description: List of executed Notification Plans.
          items:
            $ref: '#/components/schemas/NotificationPlan'
    
    ServicePolicy:
      type: object
      description: Service policy activity.
      properties:
        id:
          type: string
          description: Top Level unique identifier.
        specId:
          type: string
          description: Top Level specification identifier.
        servicePlans:
          type: array
          description: List of executed Service Plans.
          items:
            $ref: '#/components/schemas/SessionPlan'
        notificationPlans:
          type: array
          description: List of executed Notification Plans.
          items:
            $ref: '#/components/schemas/NotificationPlan'
    
    EligibilityPlan:
      type: object
      description: Eligibility plan.
      properties:
        specId:
          type: string
          description: Identification of the specification of the executed plan.
        resultSpecId:
          type: string
          description: Identification of plan specification result.
    
    SessionPlan:
      type: object
      description: Session plan.
      properties:
        specId:
          type: string
          description: Identification of the specification of the executed plan.
        resultSpecIds:
          type: array
          items:
            type: string
            description: Identification of plan specification result.
    
    ServicePlan:
      type: object
      description: service plan
      properties:
        specId:
          type: string
          description: Identification of the specification of the executed plan
        resultSpecIds:
          type: array
          items:
            type: string
            description: Identification of plan specification result.
    
    NotificationPlan:
      type: object
      description: Notification plan.
      properties:
        specId:
          type: string
          description: Identification of the specification of the executed plan
        resultSpecIds:
          type: array
          items:
            type: string
            description: Identification of plan specification result.
    
    AppliedEligibility:
      type: object
      description: Applied eligibility.
      properties:
        result:
          type: boolean
          description: Eligibility result.
        reason:
          type: string
          description: Eligibility reason.
          examples:
          - AUTHORIZED
    
    AppliedPCCRule:
      type: object
      description: The PCC rules used. A PCC Rule is a rule associated with policies to define the control of the service (e.g., charging 64Kbps).
      properties:
        specId:
          type: string
          description: Identifier of the applied PCC Rule specification.
    
    AppliedSessionRule:
      type: object
      properties:
        specId:
          type: string
          description: Identifier of the applied Session Rule specification.
    
    PolicyCounter:
      type: object
      description: A Policy Counter is used to store any number relevant to the business (e.g., the number of Octets spent by the subscriber on a specific service).
      properties:
        id:
          type: string
          description: Policy Counter identifier.
        value:
          type: string
          description: Policy Counter value.
      examples:
      - id: counter-12345
        value: "100"
    
    Notification:
      type: object
      required:
        - subject
      properties:
        id:
          type: string
          description: The unique identifier for the notification.
        channel:
          type: string
          description: The channel through which the notification is sent.
          examples: 
          - SMS
          - EMAIL
        originator:
          type: string
          description: The originator address for the notification (email or phone number/large account).
          examples: 
          - "103"
        destinations:
          type: array
          items:
            type: string
          description: The list of destination addresses for the notification (emails or phone numbers).
          examples:
          - "961234567"
        subject:
          type: string
          description: The subject of the notification (only applicable for email notifications).
          examples: 
          - email subject
        message:
          type: string
          description: The content of the notification message.
          examples: 
          - Insufficient balance. Please recharge. Thanks.
        publishTs:
          type: string
          format: utcz
          description: The timestamp when the notification is published.
        validityTs:
          type: string
          format: utcz
          description: The timestamp indicating the validity of the notification message.
        dispatchPeriods:
          type: array
          description: The periods during which the notification can be dispatched.
          minItems: 1
          items:
            type: object
            properties:
              startTs:
                type: string
                format: UTCZ
                description: The start timestamp of the dispatch period.
              endTs:
                type: string
                format: UTCZ
                description: The end timestamp of the dispatch period.
        ntfTopLevelSpecId:
          type: string
          description: The identifier for the notification top-level spec.
        ntfTopLevelSpecVersion:
          type: string
          description: The version of the notification top-level spec.
        ntfPlanSpecId:
          type: string
          description: The identifier for the notification plan spec.
        ntfPlanSpecVersion:
          type: string
          description: The version of the notification plan spec.
        ntfResultSpecId:
          type: string
          description: The identifier for the notification result spec.
        ntfResultSpecVersion:
          type: string
          description: The version of the notification result spec.
