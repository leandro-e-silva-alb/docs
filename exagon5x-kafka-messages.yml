asyncapi: 3.0.0
info:
  title: Exagon Kafka Messages
  version: 5.x
defaultContentType: application/json

operations:
  SendExagonCommand:
    action: send
    channel:
      $ref: '#/channels/ExagonCommand'
  SendExagonNotification:
    action: send
    channel:
      $ref: '#/channels/ExagonNotification'
  SendExagonStatus:
    action: send
    channel:
      $ref: '#/channels/ExagonStatus'
  SendExagonEvent:
    action: send
    channel:
      $ref: '#/channels/ExagonEvent'
  SendExagonSnapshot:
    action: send
    channel:
      $ref: '#/channels/ExagonSnapshot'
  SendIsolationReference:
    action: send
    channel:
      $ref: '#/channels/IsolationReference'
  SendSagaStarted:
    action: send
    channel:
      $ref: '#/channels/SagaStarted'
  SendSagaFinished:
    action: send
    channel:
      $ref: '#/channels/SagaFinished'
  SendSagaRollback:
    action: send
    channel:
      $ref: '#/channels/SagaRollback'

channels:
  ExagonCommand:
    address: command.{name}
    messages:
      ExagonCommand:
        $ref: '#/components/messages/ExagonCommand'
  ExagonNotification:
    address: notification.{name}
    messages:
      ExagonNotification:
        $ref: '#/components/messages/ExagonNotification'
  ExagonStatus:
    address: com.alticelabs.ccp.pcf.{workflowPath}
    messages:
      ExagonStatus:
        $ref: '#/components/messages/ExagonStatus'
  ExagonEvent:
    address: events_{entityName}
    messages:
      ExagonEvent:
        $ref: '#/components/messages/ExagonEvent'
  ExagonSnapshot:
    address: snapshots_{entityName}
    messages:
      ExagonSnapshot:
        $ref: '#/components/messages/ExagonSnapshot'
  IsolationReference:
    address: com.alticelabs.ccp.exagon.infra_lib.isolation_manager.models.IsolationReference
    messages:
      ExagonIsolationReference:
        $ref: '#/components/messages/IsolationReference'
  SagaStarted:
    address: com.alticelabs.ccp.exagon.infra_lib.task_coordinator.saga.models.SagaStarted
    messages:
      SagaStarted:
        $ref: '#/components/messages/SagaStarted'
  SagaFinished:
    address: com.alticelabs.ccp.exagon.infra_lib.task_coordinator.saga.models.SagaFinished
    messages:
      SagaFinished:
        $ref: '#/components/messages/SagaFinished'
  SagaRollback:
    address: com.alticelabs.ccp.exagon.infra_lib.task_coordinator.saga.models.SagaRollback
    messages:
      SagaRollback:
        $ref: '#/components/messages/SagaRollback' 


components:
  messages:
    ExagonCommand:
      headers:
        $ref: "#/components/schemas/ExagonCommandHeaders"
      payload:
        type: object
        description: The transported business command.
    ExagonNotification:
      headers:
        $ref: "#/components/schemas/ExagonNotificationHeaders"
      payload:
        type: object
        description: The transported business notification.
    ExagonStatus:
      headers:
        $ref: "#/components/schemas/ExagonStatusHeaders"
      payload:
        type: object
        description: The transported business status.
    ExagonEvent:
      payload:
        $ref: "#/components/schemas/EventPayload"
    ExagonSnapshot:
      payload:
        $ref: "#/components/schemas/SnapshotPayload"
    IsolationReference:
      payload:
        $ref: "#/components/schemas/IsolationReferencePayload"
    SagaStarted:
      payload:
        $ref: "#/components/schemas/SagaStartedPayload"
    SagaFinished:
      payload:
        type: object
        additionalProperties: false
        description: _Empty payload_.
    SagaRollback:
      payload:
        type: object
        additionalProperties: false
        description: _Empty payload_.
  
  schemas:
    ExagonCommandHeaders:
      type: object
      contentType: application/json
      properties:
        status-Address:
          type: string
          description: The channel address to where the resulting Exagon Status from the command execution should be sent.
          example: com.alticelabs.ccp.pcf.provisioning.ProvisionWorkflow
        workflow-Step-Identifier:
          type: string
          example: executePRV_01
        command-Qualifier:
          type: string
        saga-Started-Timestamp:
          type: string
          format: date-time
          description: The instant when the Saga was started. Used to calculate Latency KPIs.
        produced-Timestamp:
          type: string
          format: date-time
          description: The instant when this command was produced. Used to calculate Latency KPIs.
        polymorphic-Arguments:
          type: string
        is-After-Ponr:
          type: boolean
          default: false
    ExagonNotificationHeaders:
      type: object
      contentType: application/json
      properties:
        produced-Timestamp:
          type: string
          format: date-time
          description: The instant when this command was produced. Used to calculate Latency KPIs.
    ExagonStatusHeaders:
      type: object
      contentType: application/json
      properties:
        status-Address:
          type: string
          description: The channel address to where the resulting Exagon Status from the command execution should be sent.
          example: com.alticelabs.ccp.pcf.provisioning.ProvisionWorkflow
        workflow-Step-Identifier:
          type: string
          example: executePRV_01
        command-Qualifier:
          type: string
        saga-Started-Timestamp:
          type: string
          format: date-time
          description: The instant when the Saga was started. Used to calculate Latency KPIs.
        produced-Timestamp:
          type: string
          format: date-time
          description: The instant when this command was produced. Used to calculate Latency KPIs.
        is-After-PoNR:
          type: boolean
          default: false
        is-Error-Status:
          type: boolean
          default: false
          description: Indicates if there was an exception on during the command execution.
    IsolationReferencePayload:
      type: object
      properties:
        tsRead:
          type: string
          format: date-time
        tsWrite:
          type: string
          format: date-time
        tsEventReference:
          type: string
          format: date-time
    EventPayload:
      type: object
      properties:
        sagaId:
          type: string
        entityId:
          type: string
        writeTimestamp:
          type: string
          format: date-time
        referenceTimestamp:
          type: string
          format: date-time
        event:
          type: object
        rollback:
          type: boolean
          default: false
    SnapshotPayload:
      type: object
      properties:
        sagaId:
          type: string
        entityId:
          type: string
        entity:
          type: object
        writeTimestamp:
          type: string
          format: date-time
        referenceTimestamp:
          type: string
          format: date-time
        creationDate:
          type: string
          format: date-time
        removeDate:
          type: string
          format: date-time
        rollback:
          type: boolean
          default: false
    SagaStartedPayload:
      type: object
      properties:
        tsEventReference:
          type: string
          format: date-time
        sagaTimeout:
          type: string
          format: date-time
